import bdkpython as bdk

from bitcoin_usb.address_types import bdk

# test seeds
# seed1: spider manual inform reject arch raccoon betray moon document across main build
# seed2: similar seek stock parent depart rug adjust acoustic oppose sell roast hockey
# seed3: debris yellow child maze hen lamp law venue pluck ketchup melody sick


network = bdk.Network.REGTEST


p2wsh_psbt_0_2of3 = bdk.Psbt(
    "cHNidP8BAIkBAAAAATqahH4QTEKfxm6qlALcWC5h8D9bjKFoW0VRfm4auf4aAAAAAAD9////AvQBAAAAAAAAIgAgsCBsnrRoOkUsY175u3Fa6vNXXwsSNbf4mDWFFvXODJH0AQAAAAAAACIAIPVnTHBKqnziIq5ov/TvQ8nNJYQ1MakbfdY7VMXIJbnpR8EmAAABAH0BAAAAAYMWmPX/X+Jq1QzTenGMmtvdeaMYEKYf7Nli0gzb+7C0AAAAAAD9////AugDAAAAAAAAIgAgHWI4I8UK5PLP+DtAXdlRI8Sts/PIRh1ksMD6iKlk/r6/GgAAAAAAABYAFNiY7EiZrTSaq0ipS+jFKXBQep4ON8EmAAEBK+gDAAAAAAAAIgAgHWI4I8UK5PLP+DtAXdlRI8Sts/PIRh1ksMD6iKlk/r4BBWlSIQIyOXzeZut4A5aUyMNWJy0Opx5iGruvdPBowW71rVQ1piEDDuRS5miVqUzK3RnF0adROAfU5jFNecF4zZ5TPebcRUMhAxU1ObeArGZ6bGPcb/KWg98LPu3Jj5wzMr9mDNI31ta0U64iBgIyOXzeZut4A5aUyMNWJy0Opx5iGruvdPBowW71rVQ1phixB43FVAAAgAEAAIAAAACAAAAAABUAAAAiBgMO5FLmaJWpTMrdGcXRp1E4B9TmMU15wXjNnlM95txFQxjRua98VAAAgAEAAIAAAACAAAAAABUAAAAiBgMVNTm3gKxmemxj3G/yloPfCz7tyY+cMzK/ZgzSN9bWtBiBe43+VAAAgAEAAIAAAACAAAAAABUAAAAAAQFpUiECwFSVDN1wlaOC4Xh3Vz8f1Fe1R3C9BnOEctx14BcM/vAhAvWDA1HgThJW6S0Buq4+ribWkdx/+Mq1qsmRr4XPMC1BIQNmWAeip+z4mEdQsVP1K0vLgB/pAvW5A/Vf5wi3tfahM1OuIgICwFSVDN1wlaOC4Xh3Vz8f1Fe1R3C9BnOEctx14BcM/vAYgXuN/lQAAIABAACAAAAAgAEAAAAVAAAAIgIC9YMDUeBOElbpLQG6rj6uJtaR3H/4yrWqyZGvhc8wLUEYsQeNxVQAAIABAACAAAAAgAEAAAAVAAAAIgIDZlgHoqfs+JhHULFT9StLy4Af6QL1uQP1X+cIt7X2oTMY0bmvfFQAAIABAACAAAAAgAEAAAAVAAAAAAEBaVIhAibQDjOdARwmI9G/ZnarEd23QZ/bskSSk5pzTsSbppqXIQNVWIlGZfiE5uzg9WV4Kkn7P+sdkX4mXCalj4wWRNH1dCED5H+E6OnZns/lomlsiSKclAcFlG7AZROwRk/voGCezotTriICAibQDjOdARwmI9G/ZnarEd23QZ/bskSSk5pzTsSbppqXGLEHjcVUAACAAQAAgAAAAIAAAAAAFAAAACICA1VYiUZl+ITm7OD1ZXgqSfs/6x2RfiZcJqWPjBZE0fV0GNG5r3xUAACAAQAAgAAAAIAAAAAAFAAAACICA+R/hOjp2Z7P5aJpbIkinJQHBZRuwGUTsEZP76Bgns6LGIF7jf5UAACAAQAAgAAAAIAAAAAAFAAAAAA="
)
p2wsh_psbt_1_2of3 = bdk.Psbt(
    "cHNidP8BAIkBAAAAATqahH4QTEKfxm6qlALcWC5h8D9bjKFoW0VRfm4auf4aAAAAAAD9////AlgCAAAAAAAAIgAgsCBsnrRoOkUsY175u3Fa6vNXXwsSNbf4mDWFFvXODJGQAQAAAAAAACIAIP0Ts8vJczsQLi1FvMD/RkcQMQqvjX5Uyh98yNm5KKhzR8EmAAABAH0BAAAAAYMWmPX/X+Jq1QzTenGMmtvdeaMYEKYf7Nli0gzb+7C0AAAAAAD9////AugDAAAAAAAAIgAgHWI4I8UK5PLP+DtAXdlRI8Sts/PIRh1ksMD6iKlk/r6/GgAAAAAAABYAFNiY7EiZrTSaq0ipS+jFKXBQep4ON8EmAAEBK+gDAAAAAAAAIgAgHWI4I8UK5PLP+DtAXdlRI8Sts/PIRh1ksMD6iKlk/r4iAgIyOXzeZut4A5aUyMNWJy0Opx5iGruvdPBowW71rVQ1pkcwRAIgKXaWbCmWs8FwBTQu67YBM3QShkYLE1Ag3LTyCJYp2FECIERAKtoA3GrLQED0QJn1N6E49FWMsQ+HRlbZ1UShmw9uAQEFaVIhAjI5fN5m63gDlpTIw1YnLQ6nHmIau6908GjBbvWtVDWmIQMO5FLmaJWpTMrdGcXRp1E4B9TmMU15wXjNnlM95txFQyEDFTU5t4CsZnpsY9xv8paD3ws+7cmPnDMyv2YM0jfW1rRTriIGAjI5fN5m63gDlpTIw1YnLQ6nHmIau6908GjBbvWtVDWmGLEHjcVUAACAAQAAgAAAAIAAAAAAFQAAACIGAw7kUuZolalMyt0ZxdGnUTgH1OYxTXnBeM2eUz3m3EVDGNG5r3xUAACAAQAAgAAAAIAAAAAAFQAAACIGAxU1ObeArGZ6bGPcb/KWg98LPu3Jj5wzMr9mDNI31ta0GIF7jf5UAACAAQAAgAAAAIAAAAAAFQAAAAABAWlSIQLAVJUM3XCVo4LheHdXPx/UV7VHcL0Gc4Ry3HXgFwz+8CEC9YMDUeBOElbpLQG6rj6uJtaR3H/4yrWqyZGvhc8wLUEhA2ZYB6Kn7PiYR1CxU/UrS8uAH+kC9bkD9V/nCLe19qEzU64iAgLAVJUM3XCVo4LheHdXPx/UV7VHcL0Gc4Ry3HXgFwz+8BiBe43+VAAAgAEAAIAAAACAAQAAABUAAAAiAgL1gwNR4E4SVuktAbquPq4m1pHcf/jKtarJka+FzzAtQRixB43FVAAAgAEAAIAAAACAAQAAABUAAAAiAgNmWAeip+z4mEdQsVP1K0vLgB/pAvW5A/Vf5wi3tfahMxjRua98VAAAgAEAAIAAAACAAQAAABUAAAAAAQFpUiEDHmZf8lOi367yritD9OBEELdnlxBDQJ8RJ6K4XOLEj4chAzEeI4tAmDMbcRnTWKK8hLiBt0B4SGwxjNipmdepFuElIQM0k/Q5IHXpN2wyoRpv4qs0vvdDu1faStzIJdnmttWKJ1OuIgIDHmZf8lOi367yritD9OBEELdnlxBDQJ8RJ6K4XOLEj4cYsQeNxVQAAIABAACAAAAAgAAAAAASAAAAIgIDMR4ji0CYMxtxGdNYoryEuIG3QHhIbDGM2KmZ16kW4SUYgXuN/lQAAIABAACAAAAAgAAAAAASAAAAIgIDNJP0OSB16TdsMqEab+KrNL73Q7tX2krcyCXZ5rbViicY0bmvfFQAAIABAACAAAAAgAAAAAASAAAAAA=="
)


p2wsh_2_2of3 = bdk.Psbt(
    "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"
)


def test_finalize():
    result = p2wsh_2_2of3.finalize()
    assert result.could_finalize
    assert (
        bytes(result.psbt.extract_tx().serialize()).hex()
        == "010000000001013bae3b01fe60dde533d08766e6b185753e3ffc56410529c257714f19e0dbf3560000000000fdffffff0210270000000000002200206e7c4815627ce113d01074092015985402c41a0afa7bdf7154b4f60c3ca4a616be910d00000000002200207fb6b1e11eb4d33d27a9ad7d7c33d84c0fec4d60aa3a6faf41c723dec3ddbe48040047304402205b8ef5c2a82c4335bf78ee29e57e0fdca8b46cc738d3a51dd997680e2ab1aecf02204d3788be2657ae1c15e5dcd155f2b4088300a64c9931e32ca4179aa792fb49bc0147304402207442239fc7278fbfd61f3de747dc69311cdc7d3090ab3cc26012a1c18298968d02202769a6c4fe6d09b592dad10090a973c7a77c672371a4bdda631b443bc23a8e6a0169522102a2fdde10f3f0c00fbb4b6369075142064df0643bbe11704eaed2098bc2202359210314c0fd9bdc717d221cc2673749789c89357abf5d3af7731273bf4b435e52059121035c9fafaad2f293cc228b12f94c595c1b4bf3eece55556ec19f31ca10b7a3a35253ae73000000"
    )


def test_not_finalize():
    assert not p2wsh_psbt_0_2of3.finalize().could_finalize
    assert not p2wsh_psbt_1_2of3.finalize().could_finalize
